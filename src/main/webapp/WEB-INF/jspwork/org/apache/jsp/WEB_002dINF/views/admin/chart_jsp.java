/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.35
 * Generated at: 2019-02-26 10:53:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class chart_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1548382399000L));
    _jspx_dependants.put("jar:file:/Users/jueun/Desktop/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/Users/jueun/Desktop/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fn.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/Users/jueun/Desktop/sts_workspace/GodOfDelivery/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      if (_jspx_meth_fmt_005frequestEncoding_005f0(_jspx_page_context))
        return;
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("pageTitle", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("배달의 신", request.getCharacterEncoding()), out, false);
      out.write("\n");
      out.write("\n");
      out.write("<!-- Custom fonts for this template-->\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/fontawesome-free/css/all.css\" rel=\"stylesheet\">\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- Custom styles for this template-->\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/sb-admin-2.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- 구글차트 API -->\n");
      out.write("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n");
      out.write("\n");
      out.write("<!-- DatePicker -->\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css\">\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("$(function(){\n");
      out.write("\t$(\"#chart\").addClass(\"active\");\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("/* 카테고리별 판매량 (파이 차트) */\n");
      out.write("google.charts.load('current', {'packages':['corechart']});\n");
      out.write("google.charts.setOnLoadCallback(drawChartByCategory);\n");
      out.write("\n");
      out.write("function drawChartByCategory() {\n");
      out.write("\n");
      out.write("  var data = google.visualization.arrayToDataTable([\n");
      out.write("    ['Category', 'Total Price'],\n");
      out.write("    ['치킨', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[0]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("    ['피자', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[1]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("    ['보쌈/족발', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[2]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("    ['분식', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[3]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("    ['중식', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[4]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("    ['일식', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[5]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("    ['한식', ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${chartByCategoryList[6]}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("],\n");
      out.write("  ]);\n");
      out.write("\n");
      out.write("  var options = {\n");
      out.write("  };\n");
      out.write("\n");
      out.write("  var chart = new google.visualization.PieChart(document.getElementById('chartByCategory'));\n");
      out.write("\n");
      out.write("  chart.draw(data, options);\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("/* 일주일 판매량 */\n");
      out.write("/* 일주일 판매량 DatePicker*/\n");
      out.write("$(function(){\n");
      out.write("\tvar startDate;\n");
      out.write("    var endDate;\n");
      out.write("    \n");
      out.write("    $('#weeklyDatePicker').datepicker( {\n");
      out.write("    \tdayNames: ['월요일', '화요일', '수요일', '목요일', '금요일', '토요일', '일요일'],\n");
      out.write("        dayNamesMin: ['월', '화', '수', '목', '금', '토', '일'], \n");
      out.write("        monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'],\n");
      out.write("        monthNames: ['1월','2월','3월','4월','5월','6월','7월','8월','9월','10월','11월','12월'],\n");
      out.write("        showOtherMonths: true,\n");
      out.write("        selectOtherMonths: true,\n");
      out.write("\t\tselectWeek:true,\n");
      out.write("        onSelect: function(dateText, inst) { \n");
      out.write("            var date = $(this).datepicker('getDate');\n");
      out.write("            startDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay());\n");
      out.write("            endDate = new Date(date.getFullYear(), date.getMonth(), date.getDate() - date.getDay() + 6);\n");
      out.write("\t\t\tvar dateFormat = 'yy/mm/dd'\n");
      out.write("            startDate = $.datepicker.formatDate( dateFormat, startDate, inst.settings );\n");
      out.write("            endDate = $.datepicker.formatDate( dateFormat, endDate, inst.settings );\n");
      out.write("\n");
      out.write("\t\t\t$('#weeklyDatePicker').val(startDate + '~' + endDate);\n");
      out.write("            \n");
      out.write("            setTimeout(\"applyWeeklyHighlight()\", 100);\n");
      out.write("        },\n");
      out.write("\t\tbeforeShow : function() {\n");
      out.write("\t\t\tsetTimeout(\"applyWeeklyHighlight()\", 100);\n");
      out.write("\t\t}\n");
      out.write("    });\n");
      out.write("});\n");
      out.write("\n");
      out.write("function applyWeeklyHighlight() {\n");
      out.write("\n");
      out.write("\t$('.ui-datepicker-calendar tr').each(function() {\n");
      out.write("\n");
      out.write("\t\tif ($(this).parent().get(0).tagName == 'TBODY') {\n");
      out.write("\t\t\t$(this).mouseover(function() {\n");
      out.write("\t\t\t\t$(this).find('a').css({\n");
      out.write("\t\t\t\t\t'background' : '#ffffcc',\n");
      out.write("\t\t\t\t\t'border' : '1px solid #dddddd'\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t$(this).find('a').removeClass('ui-state-default');\n");
      out.write("\t\t\t\t$(this).css('background', '#ffffcc');\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(this).mouseout(function() {\n");
      out.write("\t\t\t\t$(this).css('background', '#ffffff');\n");
      out.write("\t\t\t\t$(this).find('a').css('background', '');\n");
      out.write("\t\t\t\t$(this).find('a').addClass('ui-state-default');\n");
      out.write("\t\t\t});\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 일주일 판매량 ajax*/\n");
      out.write("$(function(){\n");
      out.write("\t$('#btnByWeek').on(\"click\", function(){\n");
      out.write("\t\t\n");
      out.write("\t\tvar weeklyStartDate = $(\"#weeklyDatePicker\").val().substring(0, 10);\n");
      out.write("\t\tvar weeklyEndDate = $(\"#weeklyDatePicker\").val().substring(11, 21);\n");
      out.write("\t\t\n");
      out.write("\t\t$.ajax({\n");
      out.write("\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/chartByWeek.do?weeklyStartDate=\"+weeklyStartDate+\"&weeklyEndDate=\"+weeklyEndDate,\n");
      out.write("\t\t\ttype : \"post\",\n");
      out.write("\t\t\tasync:\"false\",\n");
      out.write("\t\t\tsuccess : function(data){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tgoogle.charts.setOnLoadCallback(drawChartByWeek);\n");
      out.write("\n");
      out.write("\t\t\t\tfunction drawChartByWeek(){\n");
      out.write("\n");
      out.write("\t\t\t\t\t// 차트 데이터\n");
      out.write("\t\t\t\t\tvar chartData = new google.visualization.arrayToDataTable([\n");
      out.write("\t\t\t\t\t\t['요일', '치킨', '피자', '보쌈/족발', '분식', '중식', '일식', '한식'], \n");
      out.write("\t\t\t\t\t\t['월', data.chartByWeekList[0], data.chartByWeekList[1], data.chartByWeekList[2], data.chartByWeekList[3], data.chartByWeekList[4], data.chartByWeekList[5], data.chartByWeekList[6]],\n");
      out.write("\t\t\t\t\t\t['화', data.chartByWeekList[7], data.chartByWeekList[8], data.chartByWeekList[9], data.chartByWeekList[10], data.chartByWeekList[11], data.chartByWeekList[12], data.chartByWeekList[13]],\n");
      out.write("\t\t\t\t\t\t['수', data.chartByWeekList[14], data.chartByWeekList[15], data.chartByWeekList[16], data.chartByWeekList[17], data.chartByWeekList[18], data.chartByWeekList[19], data.chartByWeekList[20]],\n");
      out.write("\t\t\t\t\t\t['목', data.chartByWeekList[21], data.chartByWeekList[22], data.chartByWeekList[23], data.chartByWeekList[24], data.chartByWeekList[25], data.chartByWeekList[26], data.chartByWeekList[27]],\n");
      out.write("\t\t\t\t\t\t['금', data.chartByWeekList[28], data.chartByWeekList[29], data.chartByWeekList[30], data.chartByWeekList[31], data.chartByWeekList[32], data.chartByWeekList[33], data.chartByWeekList[34]],\n");
      out.write("\t\t\t\t\t\t['토', data.chartByWeekList[35], data.chartByWeekList[36], data.chartByWeekList[37], data.chartByWeekList[38], data.chartByWeekList[39], data.chartByWeekList[40], data.chartByWeekList[41]],\n");
      out.write("\t\t\t\t\t\t['일', data.chartByWeekList[42], data.chartByWeekList[43], data.chartByWeekList[44], data.chartByWeekList[45], data.chartByWeekList[46], data.chartByWeekList[47], data.chartByWeekList[48]],\n");
      out.write("\t\t\t\t\t]);\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar chart_options = {\n");
      out.write("\t\t\t\t\t\twidth : 700,\n");
      out.write("\t\t\t\t\t\theight : 400,\n");
      out.write("\t\t\t\t\t\tbar : {\n");
      out.write("\t\t\t\t\t\t\tgroupWidth : '50%'\n");
      out.write("\t\t\t\t\t\t},\n");
      out.write("\t\t\t\t\t\tisStacked : true // 그래프 쌓기(스택), 기본값은 false\n");
      out.write("\t\t\t\t\t};\n");
      out.write("\n");
      out.write("\t\t\t\t\tvar chart = new google.visualization.ColumnChart(document.getElementById('chartByWeek'));\n");
      out.write("\t\t\t\t\tchart.draw(chartData, chart_options);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t})\n");
      out.write("});\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("input#btnYear{float : right;}\n");
      out.write("input#getYear{float : right;}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<!-- Page Wrapper -->\n");
      out.write("  <div id=\"wrapper\">\n");
      out.write("\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/admin/sideBar.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("    <!-- Content Wrapper -->\n");
      out.write("    <div id=\"content-wrapper\" class=\"d-flex flex-column\">\n");
      out.write("\n");
      out.write("      <!-- Main Content -->\n");
      out.write("      <div id=\"content\">\n");
      out.write("\n");
      out.write("        <!-- Begin Page Content -->\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("\n");
      out.write("          <!-- Page Heading -->\n");
      out.write("          <h1 class=\"h3 mb-4 text-gray-800\">통계</h1>\n");
      out.write("          \n");
      out.write("          <!-- 카테고리별 판매량 (파이 차트) -->\n");
      out.write("          <div class=\"card shadow mb-4\" style=\"width:740px\">\n");
      out.write("            <div class=\"card-header py-3\">\n");
      out.write("              <h6 class=\"m-0 font-weight-bold text-primary\">카테고리별 판매량</h6>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"card-body\">\n");
      out.write("              <div id=\"chartByCategory\" style=\"width:700px; height:300px;\"></div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          \n");
      out.write("          <div class=\"card shadow mb-4\" style=\"width:740px\">\n");
      out.write("            <div class=\"card-header py-3\" style=\"display:inline-block;\">\n");
      out.write("              <h6 class=\"m-0 font-weight-bold text-primary\" style=\"display:inline-block;\">월별 판매량</h6>\n");
      out.write("              <input type=\"button\" id=\"btnYear\" class=\"btn-light btn-sm\" value=\"검색\" />\n");
      out.write("              <input type=\"text\" id=\"getYear\" placeholder=\"ex)2018\" />\n");
      out.write("            </div>\n");
      out.write("            <div class=\"card-body\">\n");
      out.write("              <div id=\"chartByMonth\" style=\"width:700px; height:300px;\"></div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("\t\t  \n");
      out.write("\t\t  <div class=\"card shadow mb-4\" style=\"width:740px\">\n");
      out.write("            <div class=\"card-header py-3\">\n");
      out.write("              <h6 class=\"m-0 font-weight-bold text-primary\">일주일 판매량</h6>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"card-body\" style=\"text-align:center;\">\n");
      out.write("              <input class=\"form-control\" type='text' id='weeklyDatePicker' placeholder=\"Select Week\" style=\"width:210px; display:inline-block\"/>\n");
      out.write("              <button type=\"button\" class=\"btn btn-light\" id=\"btnByWeek\">조회</button>\n");
      out.write("              <div id=\"chartByWeek\" style=\"width:700px; height:400px;\"></div>\n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("          \n");
      out.write("       \n");
      out.write("\n");
      out.write("        </div>\n");
      out.write("        <!-- /.container-fluid -->\n");
      out.write("\n");
      out.write("      </div>\n");
      out.write("      <!-- End of Main Content -->\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("    <!-- End of Content Wrapper -->\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("  <!-- End of Page Wrapper -->\n");
      out.write("\n");
      out.write("  <!-- Scroll to Top Button-->\n");
      out.write("  <a class=\"scroll-to-top rounded\" href=\"#page-top\">\n");
      out.write("    <i class=\"fas fa-angle-up\"></i>\n");
      out.write("  </a>\n");
      out.write("\n");
      out.write("  <!-- Bootstrap core JavaScript-->\n");
      out.write("  <script src=\"vendor/jquery/jquery.min.js\"></script>\n");
      out.write("  <script src=\"vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("\n");
      out.write("  <!-- Core plugin JavaScript-->\n");
      out.write("  <script src=\"vendor/jquery-easing/jquery.easing.min.js\"></script>\n");
      out.write("\n");
      out.write("  <!-- Custom scripts for all pages-->\n");
      out.write("  <script src=\"js/sb-admin-2.min.js\"></script>\n");
      out.write("  \n");
      out.write("  <script>\n");
      out.write("  $(function(){\n");
      out.write("\t  \n");
      out.write("\n");
      out.write("  $(\"#btnYear\").on(\"click\",function(){\n");
      out.write("\t\t\n");
      out.write("\t  var year = $(\"#getYear\").val();\n");
      out.write("\t  google.charts.load(\"current\", {packages:[\"corechart\", 'bar']});\n");
      out.write("\t  google.charts.setOnLoadCallback(drawByMonthChart);\n");
      out.write(" \n");
      out.write("\t  function drawByMonthChart(){\n");
      out.write("\t  \tvar month1 = 0;\n");
      out.write("\t  \tvar month2 = 0;\n");
      out.write("\t  \tvar month3 = 0;\n");
      out.write("\t  \tvar month4 = 0;\n");
      out.write("\t  \tvar month5 = 0;\n");
      out.write("\t  \tvar month6 = 0;\n");
      out.write("\t  \tvar month7 = 0;\n");
      out.write("\t  \tvar month8 = 0;\n");
      out.write("\t  \tvar month9 = 0;\n");
      out.write("\t  \tvar month10 = 0;\n");
      out.write("\t  \tvar month11 = 0;\n");
      out.write("\t  \tvar month12 = 0;\n");
      out.write("\t\t\n");
      out.write("\t  \t$.ajax({\n");
      out.write("\t  \t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/admin/chartByMonth.do?year=\"+year,\n");
      out.write("\t  \t\ttype : \"post\",\n");
      out.write("\t  \t\tasync : \"false\",\n");
      out.write("\t  \t\tsuccess : function(list){\n");
      out.write("\n");
      out.write("\t \t\t\t$.each(list,function(index,item){\n");
      out.write("\t \t\t\t\t\n");
      out.write("\t \t\t\t\tfor(var i in item){\n");
      out.write("\t \t\t\t\t\tif(item[i] == 01){\n");
      out.write("\t \t\t\t\t\t\tmonth1 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==02){\n");
      out.write("\t \t\t\t\t\t\tmonth2 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==03){\n");
      out.write("\t \t\t\t\t\t\tmonth3 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==04){\n");
      out.write("\t \t\t\t\t\t\tmonth4 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==05){\n");
      out.write("\t \t\t\t\t\t\tmonth5 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==06){\n");
      out.write("\t \t\t\t\t\t\tmonth6 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==07){\n");
      out.write("\t \t\t\t\t\t\tmonth7 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==08){\n");
      out.write("\t \t\t\t\t\t\tmonth8 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==09){\n");
      out.write("\t \t\t\t\t\t\tmonth9 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==10){\n");
      out.write("\t \t\t\t\t\t\tmonth10 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==11){\n");
      out.write("\t \t\t\t\t\t\tmonth11 +=1;\n");
      out.write("\t \t\t\t\t\t}else if(item[i]==12){\n");
      out.write("\t \t\t\t\t\t\tmonth12 +=1;\n");
      out.write("\t \t\t\t\t\t}\n");
      out.write("\t \t\t\t\t} /* for end */\n");
      out.write("\t \t\t\t\t\n");
      out.write("\t  \t\t\tvar data= new google.visualization.arrayToDataTable([\n");
      out.write("\t\t  \t\t\t ['Month', 'Quantity',{role:'style'}],\n");
      out.write("\t\t  \t          ['01',  month1,'#6B8E23'],\n");
      out.write("\t\t  \t          ['02',  month2,'#DA70D6'],\n");
      out.write("\t\t  \t          ['03',  month3,'#66CDAA'],\n");
      out.write("\t\t  \t          ['04',  month4,'#20B2AA'],\n");
      out.write("\t\t  \t          ['05',  month5,'#ADD8E6'],\n");
      out.write("\t\t  \t          ['06',  month6,'#6495ED'],\n");
      out.write("\t\t  \t          ['07',  month7,'#8B008B'],\n");
      out.write("\t\t  \t          ['08',  month8,'#008B8B'],\n");
      out.write("\t\t  \t          ['09',  month9,'#000080'],\n");
      out.write("\t\t  \t          ['10',  month10,'#483D8B'],\n");
      out.write("\t\t  \t          ['11',  month11,'#2F4F4F'],\n");
      out.write("\t\t  \t          ['12',  month12,'#8B4513']\n");
      out.write("\t  \t\t\t]);\n");
      out.write("\n");
      out.write("\t  \t        var options = {\n");
      out.write("\t  \t        \t\ttitle: year+'년도 월별 판매량',\n");
      out.write("\t  \t              chartArea: {width: '70%'},\n");
      out.write("\t  \t              hAxis: {\n");
      out.write("\t  \t                title: 'Month',\n");
      out.write("\t  \t                minValue: 0\n");
      out.write("\t  \t              },\n");
      out.write("\t  \t              vAxis: {\n");
      out.write("\t  \t                title: 'Quantity'\n");
      out.write("\t  \t              }\n");
      out.write("\t  \t        };\n");
      out.write("\n");
      out.write("\t  \t        var chart = new google.visualization.LineChart(document.getElementById('chartByMonth'));\n");
      out.write("\t  \t        $(\"#searchYear\").show();\n");
      out.write("\t  \t        chart.draw(data, options);\n");
      out.write("\t  \t\t}); /* each end */\n");
      out.write("\t  \t}/* success end */\n");
      out.write("\n");
      out.write("\t  \t});/* ajax end */\n");
      out.write("\t  }/* function end  */\n");
      out.write("  }); /* btn click end */\n");
      out.write("  \n");
      out.write("  }); /* onload function end */\n");
      out.write("  </script>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005frequestEncoding_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:requestEncoding
    org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag _jspx_th_fmt_005frequestEncoding_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag) _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.RequestEncodingTag.class);
    boolean _jspx_th_fmt_005frequestEncoding_005f0_reused = false;
    try {
      _jspx_th_fmt_005frequestEncoding_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005frequestEncoding_005f0.setParent(null);
      // /WEB-INF/views/admin/chart.jsp(6,0) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005frequestEncoding_005f0.setValue("UTF-8");
      int _jspx_eval_fmt_005frequestEncoding_005f0 = _jspx_th_fmt_005frequestEncoding_005f0.doStartTag();
      if (_jspx_th_fmt_005frequestEncoding_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005frequestEncoding_0026_005fvalue_005fnobody.reuse(_jspx_th_fmt_005frequestEncoding_005f0);
      _jspx_th_fmt_005frequestEncoding_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005frequestEncoding_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005frequestEncoding_005f0_reused);
    }
    return false;
  }
}
